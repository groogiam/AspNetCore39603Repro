@page "/"
@using System.Text.Json
@using System.Text
@inject IJSRuntime _js
@inject JsInteropService _js2

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<button @onclick="DownloadFileFromStream">
    Download File From Stream
</button>

@code {

    private async Task DownloadFileFromStream()
    {
        var fileName = $"{DateTime.Now.ToFileTime()}_log.json";

        var results = new
        {
            Value = CreateString(100000)
        };

        var resultJson = JsonSerializer.Serialize(results, new JsonSerializerOptions
            {
                WriteIndented = true
            });

        await using var ms = new MemoryStream(Encoding.UTF8.GetBytes(resultJson));
        
        //works
        //using var streamRef = new DotNetStreamReference(ms);
        //await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);

        //does not work
        await _js2.DownloadFromStream(fileName, ms);
    }

    static readonly Random rd = new();

    internal static string CreateString(int stringLength)
    {
        const string allowedChars = "ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz0123456789";
        char[] chars = new char[stringLength];

        for (int i = 0; i < stringLength; i++)
        {
            chars[i] = allowedChars[rd.Next(0, allowedChars.Length)];
        }

        return new string(chars);
    }

}